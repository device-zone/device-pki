#!/bin/bash

#
# PKI Certificates Autodiscovery
# ==============================
#
# This script autogenerates the pki certificates config.

set -e
umask 0007


#
# Handle the cleanup
# ------------------
cleanup_before_exit () {
  if [ -d "${tmpdir}" ]; then
    rm -rf "${tmpdir}"
  fi
}
# be in a temporay workspace (this works on linux and macosx)
tmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'tmpdir'`
# trap catches the exit signal and runs the specified function
trap cleanup_before_exit EXIT
# be in our directory
cd "${tmpdir}"


#
# Per certificate? Run all scripts

run_scripts() {

  request="${1}"
  uuid="${2}"

  logger -t "pki-certificates-autodiscovery" "running autodiscovery for pki certificate ${uuid}..."

  rm -f "${line}/warning"

  find "$0.d" -type f -executable | sort | \
  while read x; do
    "$x" "${request}" "${uuid}" < /dev/null || touch error;
  done

  if test ! -f "error"; then
    logger -t "pki-certificates-autodiscovery" "completed autodiscovery for pki certificate ${uuid}."
  else
    logger -t "pki-certificates-autodiscovery" "failed autodiscovery for pki certificate ${uuid}."
  fi

}


#
# What to do?
# -----------

request="${1}"
uuid="${2}"

if test -n "${uuid}"; then
  run_scripts "${1}" "${2}"
  exit 0
fi



#
# Add/remove pki certificates

find /etc/device/system/pki/certificates/ -mindepth 1 -maxdepth 1 -type l | \
while read line; do

  target=$(readlink -f "$line")

  if test ! -f "$line/name.txt"; then
    continue;
  fi
  instance="$(head $line/name.txt)"
  uuid=$(basename $target)

  # remove old instances
  if test -f "$line/removed"; then

    logger -t pki-certificates-autodiscovery "removing pki certificate ${instance} (${uuid})..."

    systemctl disable "pki-certificate@${uuid}"
    systemctl stop "pki-certificate@${uuid}"

    logger -t pki-certificates-autodiscovery "removed pki certificate ${instance} (${uuid})."

    # remove folder
    rm -f "${target}"/*
    rmdir "${target}"
    rm -f "${line}"

  # add new instances
  elif test -f "$line/added"; then

    logger -t pki-certificates-autodiscovery "creating pki certificate ${instance} (${uuid})..."

    if test -f "$line/disabled.bin"; then

      systemctl disable "pki-certificate@${uuid}"
      systemctl stop "pki-certificate@${uuid}"

    else

      systemctl enable "pki-certificate@${uuid}"
      systemctl start "pki-certificate@${uuid}"

    fi

    logger -t pki-certificates-autodiscovery "created pki certificate ${uuid}."

    rm -f "$line/added"

  # update instances
  elif test -f "$line/updated"; then

    logger -t pki-certificates-autodiscovery "updating pki certificate ${uuid} (${uuid})..."

    if test -f "$line/disabled.bin"; then

      systemctl disable "pki-certificate@${uuid}"
      systemctl stop "pki-certificate@${uuid}"

    else

      systemctl enable "pki-certificate@${uuid}"
      systemctl reload-or-restart "pki-certificate@${uuid}"

    fi

    logger -t pki-certificates-autodiscovery "updated pki certificate ${instance} (${uuid})."

    rm -f "$line/updated"

  fi

done


